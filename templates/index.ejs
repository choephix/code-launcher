<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>DevLaunchPad</title>
    <style>
      body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        padding: 20px;
        background-color: #f0f2f5;
        color: #333;
      }
      h1 {
        color: #2c3e50;
        text-align: center;
      }
      .button-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
        margin-bottom: 20px;
      }
      button {
        background-color: #3498db;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
      }
      button:hover {
        background-color: #2980b9;
      }
      pre {
        background-color: #ecf0f1;
        padding: 15px;
        border-radius: 5px;
        overflow-x: auto;
      }
      .columns {
        display: flex;
        gap: 20px;
      }
      .column {
        flex: 1;
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      }
      .icon {
        margin-right: 5px;
      }
    </style>
  </head>
  <body>
    <h1>DevLaunchPad</h1>
    <div id="templateButtons" class="button-container">
      <!-- Template buttons will be inserted here -->
    </div>
    <button onclick="runCommand('ls -la ~')">List Home Directory</button>
    <button onclick="runCustomCommand()">Run Custom Command</button>

    <div id="result">
      <!-- Results will be inserted here -->
    </div>

    <script>
      const templates = [
        { name: "Empty Project", icon: "📁", command: "mkdir -p ~/workspace/{folderName} && cd ~/workspace/{folderName} && git init && code ." },
        { name: "Next.js App", icon: "⚛️", command: "npx create-next-app ~/workspace/{folderName}" },
        { name: "Vite React + TypeScript", icon: "🔥", command: "npm create vite@latest ~/workspace/{folderName} -- --template react-ts" },
        { name: "Vite Vanilla TypeScript", icon: "🍦", command: "npm create vite@latest ~/workspace/{folderName} -- --template vanilla-ts" },
        { name: "Express.js API", icon: "🚀", command: "mkdir -p ~/workspace/{folderName} && cd ~/workspace/{folderName} && npm init -y && npm install express && echo \"const express = require('express'); const app = express(); const port = 3000; app.get('/', (req, res) => res.send('Hello World!')); app.listen(port, () => console.log(`Server running on port ${port}`));\" > index.js && code ." },
        { name: "Vue.js Project", icon: "🖖", command: "npm create vue@latest ~/workspace/{folderName}" }
      ];

      function createTemplateButtons() {
        const buttonContainer = document.getElementById('templateButtons');
        templates.forEach(template => {
          const button = document.createElement('button');
          button.innerHTML = `<span class="icon">${template.icon}</span>${template.name}`;
          button.onclick = () => createProjectFromTemplate(template);
          buttonContainer.appendChild(button);
        });
      }

      function createProjectFromTemplate(template) {
        const folderName = prompt(`Enter the project folder name for ${template.name}:`);
        if (folderName) {
          const command = template.command.replace(/{folderName}/g, folderName);
          runCommand(command);
        }
      }

      function runCommand(command) {
        fetch('/run-command', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ command }),
        })
          .then(response => response.json())
          .then(data => updateResult(data));
      }

      function runCustomCommand() {
        const command = prompt('Enter the command to run:');
        if (command) {
          runCommand(command);
        }
      }

      function updateResult(data) {
        console.log(data);

        const resultDiv = document.getElementById('result');
        resultDiv.innerHTML = `
        <div class="columns">
            <div class="column">
                <h2>Command Output</h2>
                <pre>${data.commandOutput}</pre>
            </div>
            <div class="column">
                <h2>System Stats</h2>
                <p>CPU Usage: ${data.cpuUsage}%</p>
                <p>Memory Usage: ${data.memUsage}%</p>
            </div>
        </div>
    `;
      }

      // Initialize template buttons
      createTemplateButtons();
    </script>
  </body>
</html>
